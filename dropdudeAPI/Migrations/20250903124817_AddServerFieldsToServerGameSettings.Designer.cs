// <auto-generated />
using System;
using DropDudeAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MinefieldServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250903124817_AddServerFieldsToServerGameSettings")]
    partial class AddServerFieldsToServerGameSettings
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DropDudeAPI.Models.GameResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("OccurredAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("GameResults");
                });

            modelBuilder.Entity("DropDudeAPI.Models.GameSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("BatAttackSpeed")
                        .HasColumnType("double precision");

                    b.Property<int>("BatDamage")
                        .HasColumnType("integer");

                    b.Property<int>("BatKickFlyAmount")
                        .HasColumnType("integer");

                    b.Property<int>("BatKickForce")
                        .HasColumnType("integer");

                    b.Property<int>("BubbleBulletAmount")
                        .HasColumnType("integer");

                    b.Property<int>("BubbleBulletSpeed")
                        .HasColumnType("integer");

                    b.Property<double>("CameraDistance")
                        .HasColumnType("double precision");

                    b.Property<double>("CameraXSpeed")
                        .HasColumnType("double precision");

                    b.Property<double>("CameraYSpeed")
                        .HasColumnType("double precision");

                    b.Property<int>("FindRoomSeconds")
                        .HasColumnType("integer");

                    b.Property<int>("FistDamage")
                        .HasColumnType("integer");

                    b.Property<int>("FistKickFlyAmount")
                        .HasColumnType("integer");

                    b.Property<int>("FistKickForce")
                        .HasColumnType("integer");

                    b.Property<double>("FistsAttackSpeed")
                        .HasColumnType("double precision");

                    b.Property<double>("FocusSmoothSpeed")
                        .HasColumnType("double precision");

                    b.Property<int[]>("FreeSkins")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("GameplayTimer")
                        .HasColumnType("integer");

                    b.Property<int>("LaserBulletAmount")
                        .HasColumnType("integer");

                    b.Property<int>("LaserBulletSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("LaserDamage")
                        .HasColumnType("integer");

                    b.Property<int>("LaserKickFlyAmount")
                        .HasColumnType("integer");

                    b.Property<int>("LaserKickForce")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPlayersForRandomRoom")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPlayersForRankedRoom")
                        .HasColumnType("integer");

                    b.Property<int[]>("MonthlySkins")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<double>("MouseSpeed")
                        .HasColumnType("double precision");

                    b.Property<double>("MouseSpeedMobile")
                        .HasColumnType("double precision");

                    b.Property<int>("PlayerGravity")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerJumpPower")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("RespawnDelayX")
                        .HasColumnType("integer");

                    b.Property<int>("RespawnDelayY")
                        .HasColumnType("integer");

                    b.Property<int>("RevolverBulletAmount")
                        .HasColumnType("integer");

                    b.Property<int>("RevolverBulletSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("RevolverDamage")
                        .HasColumnType("integer");

                    b.Property<int>("RevolverKickFlyAmount")
                        .HasColumnType("integer");

                    b.Property<int>("RevolverKickForce")
                        .HasColumnType("integer");

                    b.Property<double>("RotateSpeed")
                        .HasColumnType("double precision");

                    b.Property<int>("SkeletonTurnSpeed")
                        .HasColumnType("integer");

                    b.Property<int>("SkinsAmount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("GameSettings");
                });

            modelBuilder.Entity("DropDudeAPI.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("BodiesSkins")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<string>("LastSelectedSkin")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MonthlyWins")
                        .HasColumnType("integer");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<double>("Rating")
                        .HasColumnType("double precision");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("DropDudeAPI.Models.ServerGameSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FindRoomSeconds")
                        .HasColumnType("integer");

                    b.Property<int[]>("FreeSkins")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("GameplayTimer")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPlayersForRandomRoom")
                        .HasColumnType("integer");

                    b.Property<int>("MaxPlayersForRankedRoom")
                        .HasColumnType("integer");

                    b.Property<int[]>("MonthlySkins")
                        .IsRequired()
                        .HasColumnType("integer[]");

                    b.Property<int>("SkinsAmount")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ServerGameSettings");
                });

            modelBuilder.Entity("DropDudeAPI.Models.GameResult", b =>
                {
                    b.HasOne("DropDudeAPI.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });
#pragma warning restore 612, 618
        }
    }
}
